package com.estock.s3;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3ClientBuilder;
import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.services.s3.model.PutObjectRequest;

@Component
public class AmazonS3Util {

	@Value("${accessKey}")
	String accessKey;
	
	@Value("${secretKey}")
	String secretKey;
	
	@Value("${bucketName}")
	String bucketName;
	
	@Value("${dataFileName}")
	String dataFileName;
	
	@Value("${inboundS3FilePath}")
	String inboundS3FilePath;
	
	@Value("${outboundS3FilePath}")
	String outboundS3FilePath;
	
	@Value("${localFilePath}")
	String localFilePath;
	
	@Value("${downloadFilePath}")
	String downloadFilePath;
	
	public String downloadFileFromS3() {
		String response = null;
        BasicAWSCredentials awsCredentials = new BasicAWSCredentials(accessKey, secretKey);

        AmazonS3 s3Client = AmazonS3ClientBuilder.standard()
                .withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
                .build();

        try {
            S3Object s3Object = s3Client.getObject(bucketName, inboundS3FilePath + dataFileName);
            File outputFile = new File(downloadFilePath + dataFileName);
            FileOutputStream outputStream = new FileOutputStream(outputFile);

            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = s3Object.getObjectContent().read(buffer)) != -1) {
                outputStream.write(buffer, 0, bytesRead);
            }

            outputStream.close();
            s3Object.close();
            response = "File downloaded successfully to: " + downloadFilePath + dataFileName;
        } catch (IOException e) {
        	response = e.getMessage();
            e.printStackTrace();
        }
        
        return response;
	}

	public String uploadFileToS3(String[] fileNameList) {
		String response = null;
		BasicAWSCredentials awsCredentials = new BasicAWSCredentials(accessKey, secretKey);

        AmazonS3 s3Client = AmazonS3ClientBuilder.standard()
                .withCredentials(new AWSStaticCredentialsProvider(awsCredentials))
                .build();

        for(int i=0; i<fileNameList.length; i++) {
	        try {
	            File file = new File(localFilePath + fileNameList[i]);
	            s3Client.putObject(new PutObjectRequest(bucketName, outboundS3FilePath + fileNameList[i], file));
	            response = "File(s) uploaded successfully to S3 bucket: " + bucketName;
	        } catch (Exception e) {
	        	response = e.getMessage();
	            e.printStackTrace();
	        }
        }
        
		return response;
	}
	
	public String readFileFromS3(String fileName) {
		
		return null;
	}

	public String writeToS3File(String fileName) {
		
		return null;
	}

}
